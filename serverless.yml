# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: rafaacioly
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: fiap-tech-auth
# "service" is the name of this project. This will also be added to your AWS resource names.
service: fiap-tech-auth

stages:
  default:
    params:
      tableName: "users-table"

provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: 20201221
  iam:
    role: arn:aws:iam::064151784429:role/LabRole
  environment:
    USERS_TABLE: "users-table"

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: "*"

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: "users-table"
    IamRoleLambdaExecution:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${sls:stage}-lambda
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        Path: "/"

custom:
  enterpriseLogAccessIamRole: arn:aws:iam::064151784429:role/LabRole
